{"version":3,"sources":["Services/cryptoApi.js","Services/cryptoNewsApi.js","components/Loader.jsx","components/News.jsx","components/Homepage.jsx","images/cryptocurrency.png","components/Navbar.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","cryptoNewsHeaders","cryptoNewsApi","process","REACT_APP_NEWS_API_URL","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Loader","className","demoImage","Text","Typography","Title","Option","Select","News","simplified","useState","setNewsCategory","data","cryptoNews","value","gutter","span","showSearch","placeholder","optionFilterProp","onChange","filterOption","input","option","children","toLowerCase","indexOf","coins","map","currency","name","news","i","xs","sm","lg","hoverable","href","target","rel","level","src","image","thumbnail","contentUrl","alt","description","length","substring","provider","moment","datePublished","startOf","fromNow","Homepage","isFetching","globalStats","stats","title","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","to","Navbar","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","icon","size","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","coin","includes","toLocaleLowerCase","e","id","rank","extra","iconUrl","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimeperiod","cryptoDetails","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","links","link","type","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","marketShare","App","exact","path","style","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.421de1d4.chunk.js","sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'e6d91910c3msh151aceb2880381bp1b5ea9jsn208a15b97704'\r\n}\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com'\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: 'cryptoApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://coinranking1.p.rapidapi.com' }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () => createRequest('/exchanges'),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery } = cryptoApi;","import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-key': 'e6d91910c3msh151aceb2880381bp1b5ea9jsn208a15b97704',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com'\r\n\r\n};\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: 'cryptoNewsApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_NEWS_API_URL }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptoNewsQuery,\r\n} = cryptoNewsApi;","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin />\r\n  </div>\r\n);\r\n\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { useGetCryptosQuery } from '../Services/cryptoApi';\r\nimport { useGetCryptoNewsQuery } from '../Services/cryptoNewsApi';\r\nimport Loader from './Loader';\r\n\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n  const { data } = useGetCryptosQuery(100);\r\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\r\n\r\n  if (!cryptoNews?.value) return <Loader />;\r\n\r\n  return (\r\n    <Row gutter={[24, 24]}>\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className=\"select-news\"\r\n            placeholder=\"Select a Crypto\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n          >\r\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\r\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n      {cryptoNews.value.map((news, i) => (\r\n        <Col xs={24} sm={12} lg={8} key={i}>\r\n          <Card hoverable className=\"news-card\">\r\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n              <div className=\"news-image-container\">\r\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n              </div>\r\n              <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\r\n              <div className=\"provider-container\">\r\n                <div>\r\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                </div>\r\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n              </div>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default News;","import React from 'react'\r\nimport millify from 'millify'\r\nimport {Typography, Row, Col, Statistic} from 'antd'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport { useGetCryptosQuery } from '../Services/cryptoApi'\r\nimport {Cryptocurrencies} from '../components'\r\nimport News from '../components/News.jsx'\r\n\r\nconst {Title} = Typography\r\n\r\n\r\nconst Homepage = () => {\r\n    const {data, isFetching} = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if(isFetching) return 'Loading...';\r\n\r\n    return (\r\n        <>\r\n            <Title level={2} className=\"heading\">\r\n                Global Crypto Stats\r\n            </Title>\r\n\r\n            <Row>\r\n                <Col span={12}> <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total}/> </Col>\r\n                <Col span={12}> <Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)}/> </Col>\r\n                <Col span={12}> <Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}/> </Col>\r\n                <Col span={12}> <Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)}/> </Col>\r\n                <Col span={12}> <Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)}/> </Col>\r\n            </Row>\r\n\r\n            <div className=\"home-heading-containter\">\r\n                <Title level={2} className=\"home-title\">Top 10 Cryotpcurrencies in the world</Title>\r\n                <Title level={4} className=\"show-more\"> <Link to=\"/cryptocurrencies\">Show more</Link> </Title>\r\n            </div>\r\n            <Cryptocurrencies simplified/>\r\n\r\n            <div className=\"home-heading-containter\">\r\n                <Title level={2} className=\"home-title\">Latest Crypto News </Title>\r\n                <Title level={3} className=\"show-more\"> <Link to=\"/news\">Show more</Link> </Title>\r\n            </div>\r\n            <News simplified/>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nconst Navbar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize <= 800) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">Cryptoverse</Link></Typography.Title>\r\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\r\n      </div>\r\n      {activeMenu && (\r\n      <Menu theme=\"dark\">\r\n        <Menu.Item icon={<HomeOutlined />}>\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<FundOutlined />}>\r\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<MoneyCollectOutlined />}>\r\n          <Link to=\"/exchanges\">Exchanges</Link>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<BulbOutlined />}>\r\n          <Link to=\"/news\">News</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import React, {useState, useEffect} from 'react'\r\nimport millify from 'millify'\r\nimport {Link} from 'react-router-dom'\r\nimport {Card, Row, Col, Input} from 'antd'\r\nimport { useGetCryptosQuery } from '../Services/cryptoApi'\r\n\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n    \r\n    const count = simplified ? 10 : 100;\r\n    const {data: cryptosList, isFetching} = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect( ()=> {\r\n        const filteredData = cryptosList?.data?.coins.filter((coin)=> coin.name.toLowerCase().includes(searchTerm.toLocaleLowerCase()));\r\n        setCryptos(filteredData);\r\n\r\n    }, [cryptosList, searchTerm])\r\n\r\n    if(isFetching) return 'Loading...'\r\n\r\n\r\n    return (\r\n        <>\r\n        {!simplified && (\r\n        <div className=\"search-crypto\">\r\n        <Input placeholder=\"Search cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)}/>\r\n        </div>\r\n        )}\r\n        <Row gutter={[32,32]} className=\"crypto-card-container\">\r\n            {cryptos?.map((currency)=>(\r\n                <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                    <Link key={currency.id} to={`/crypto/${currency.id}`}>\r\n                        <Card \r\n                        title={`${currency.rank}. ${currency.name}`}\r\n                        extra={<img className=\"crypto-image\" src={currency.iconUrl}/>}\r\n                        hoverable\r\n                        >\r\n                            <p>Price: {millify(currency.price)}</p>\r\n                            <p>Market: {millify(currency.marketCap)}</p>\r\n                            <p>Daily Change: {millify(currency.change)}%</p>\r\n\r\n                        </Card>\r\n                    </Link>\r\n                </Col>\r\n                ))}\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../Services/cryptoApi';\r\nimport Loader from './Loader';\r\nimport LineChart from './LineChart';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timeperiod, setTimeperiod] = useState('7d');\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n  const stats = [\r\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n  ];\r\n\r\n  const genericStats = [\r\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n        </Title>\r\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\r\n      </Col>\r\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\r\n        {time.map((date) => <Option key={date}>{date}</Option>)}\r\n      </Select>\r\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">{link.type}</Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../Services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={(\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text><strong>{exchange.rank}.</strong></Text>\r\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                      <Text><strong>{exchange.name}</strong></Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                  )}\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;","import React from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport { Layout, Typography, Space } from 'antd';\r\n\r\nimport { Exchanges, Homepage, News, Cryptocurrencies, CryptoDetails, Navbar } from './components';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n  <div className=\"app\">\r\n    <div className=\"navbar\">\r\n      <Navbar />\r\n    </div>\r\n    <div className=\"main\">\r\n      <Layout>\r\n        <div className=\"routes\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Homepage />\r\n            </Route>\r\n            <Route exact path=\"/exchanges\">\r\n              <Exchanges />\r\n            </Route>\r\n            <Route exact path=\"/cryptocurrencies\">\r\n              <Cryptocurrencies />\r\n            </Route>\r\n            <Route exact path=\"/crypto/:coinId\">\r\n              <CryptoDetails />\r\n            </Route>\r\n            <Route exact path=\"/news\">\r\n              <News />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Layout>\r\n      <div className=\"footer\">\r\n        <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>Copyright © 2021\r\n          <Link to=\"/\">\r\n            Cryptodash Inc.\r\n          </Link> <br />\r\n          All Rights Reserved.\r\n        </Typography.Title>\r\n        <Space>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/exchanges\">Exchanges</Link>\r\n          <Link to=\"/news\">News</Link>\r\n        </Space>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { cryptoApi } from '../Services/cryptoApi';\r\nimport { cryptoNewsApi } from '../Services/cryptoNewsApi';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n<Router>\r\n    <Provider store={store}>\r\n    <App/>\r\n    </Provider>\r\n</Router> , document.getElementById('root'));\r\n"],"sourceRoot":""}